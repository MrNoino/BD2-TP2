DROP FUNCTION public.actuator_delete(integer, integer);
DROP FUNCTION public.actuator_history_delete(integer, integer);
DROP FUNCTION public.actuator_history_insert(integer, integer, timestamp without time zone, character varying);
DROP FUNCTION public.actuator_history_update(integer, integer, integer, timestamp without time zone, character varying);
DROP FUNCTION public.actuator_history_view(integer, integer);
DROP FUNCTION public.actuator_insert(integer, integer, numeric);
DROP FUNCTION public.actuator_update(integer, integer, integer, numeric);
DROP FUNCTION public.actuator_view(integer, integer);
DROP FUNCTION public.alert_actuator_delete(integer, integer, integer);
DROP FUNCTION public.alert_actuator_insert(integer, integer, integer, character varying);
DROP FUNCTION public.alert_actuator_update(integer, integer, integer, character varying);
DROP FUNCTION public.alert_actuator_view(integer, integer, integer);
DROP FUNCTION public.alert_delete(integer, integer);
DROP FUNCTION public.alert_history_delete(integer, integer);
DROP FUNCTION public.alert_history_insert(integer, integer, timestamp without time zone);
DROP FUNCTION public.alert_history_update(integer, integer, integer, timestamp without time zone);
DROP FUNCTION public.alert_history_view(integer, integer);
DROP FUNCTION public.alert_insert(integer, integer, character varying, character varying, character varying);
DROP FUNCTION public.alert_update(integer, integer, integer, integer, character varying, character varying);
DROP FUNCTION public.alert_user_delete(integer, integer, integer);
DROP FUNCTION public.alert_user_insert(integer, integer, timestamp without time zone);
DROP FUNCTION public.alert_user_update(integer, integer, timestamp without time zone);
DROP FUNCTION public.alert_user_view(integer, integer);
DROP FUNCTION public.alert_view(integer, integer);
DROP FUNCTION public.armor(bytea, text[], text[]);
DROP FUNCTION public.armor(bytea);
DROP FUNCTION public.crypt(text, text);
DROP FUNCTION public.dearmor(text);
DROP FUNCTION public.decrypt(bytea, bytea, text);
DROP FUNCTION public.decrypt_iv(bytea, bytea, bytea, text);
DROP FUNCTION public.digest(bytea, text);
DROP FUNCTION public.digest(text, text);
DROP FUNCTION public.encrypt(bytea, bytea, text);
DROP FUNCTION public.encrypt_iv(bytea, bytea, bytea, text);
DROP FUNCTION public.gen_random_bytes(integer);
DROP FUNCTION public.gen_random_uuid();
DROP FUNCTION public.gen_salt(text, integer);
DROP FUNCTION public.gen_salt(text);
DROP FUNCTION public.hmac(text, text, text);
DROP FUNCTION public.hmac(bytea, bytea, text);
DROP FUNCTION public.login(character varying, character varying);
DROP FUNCTION public.pgp_armor_headers(text);
DROP FUNCTION public.pgp_key_id(bytea);
DROP FUNCTION public.pgp_pub_decrypt(bytea, bytea, text, text);
DROP FUNCTION public.pgp_pub_decrypt(bytea, bytea, text);
DROP FUNCTION public.pgp_pub_decrypt(bytea, bytea);
DROP FUNCTION public.pgp_pub_decrypt_bytea(bytea, bytea);
DROP FUNCTION public.pgp_pub_decrypt_bytea(bytea, bytea, text, text);
DROP FUNCTION public.pgp_pub_decrypt_bytea(bytea, bytea, text);
DROP FUNCTION public.pgp_pub_encrypt(text, bytea);
DROP FUNCTION public.pgp_pub_encrypt(text, bytea, text);
DROP FUNCTION public.pgp_pub_encrypt_bytea(bytea, bytea);
DROP FUNCTION public.pgp_pub_encrypt_bytea(bytea, bytea, text);
DROP FUNCTION public.pgp_sym_decrypt(bytea, text);
DROP FUNCTION public.pgp_sym_decrypt(bytea, text, text);
DROP FUNCTION public.pgp_sym_decrypt_bytea(bytea, text);
DROP FUNCTION public.pgp_sym_decrypt_bytea(bytea, text, text);
DROP FUNCTION public.pgp_sym_encrypt(text, text);
DROP FUNCTION public.pgp_sym_encrypt(text, text, text);
DROP FUNCTION public.pgp_sym_encrypt_bytea(bytea, text, text);
DROP FUNCTION public.pgp_sym_encrypt_bytea(bytea, text);
DROP FUNCTION public.raise_exception(character varying, character varying, character varying);
DROP FUNCTION public.rule_view(integer);
DROP FUNCTION public.sensor_delete(integer, integer);
DROP FUNCTION public.sensor_history_delete(integer, integer);
DROP FUNCTION public.sensor_history_insert(integer, integer, timestamp without time zone, character varying);
DROP FUNCTION public.sensor_history_update(integer, integer, integer, timestamp without time zone, character varying);
DROP FUNCTION public.sensor_history_view(integer, integer);
DROP FUNCTION public.sensor_insert(integer, integer, integer, numeric);
DROP FUNCTION public.sensor_type_delete(integer);
DROP FUNCTION public.sensor_type_insert(character varying);
DROP FUNCTION public.sensor_type_update(integer, character varying);
DROP FUNCTION public.sensor_type_view(integer);
DROP FUNCTION public.sensor_update(integer, integer, integer, integer, numeric);
DROP FUNCTION public.sensor_view(integer);
DROP FUNCTION public.sensor_view(integer, integer);
DROP FUNCTION public.system_delete(integer, integer);
DROP FUNCTION public.system_insert(character varying, character varying, integer);
DROP FUNCTION public.system_update(integer, integer, character varying, character varying);
DROP FUNCTION public.system_user_delete(integer, integer, integer);
DROP FUNCTION public.system_user_insert(integer, integer, integer);
DROP FUNCTION public.system_user_view(integer, integer);
DROP FUNCTION public.system_view(integer, integer);
DROP FUNCTION public.system_view(integer);
DROP FUNCTION public.user_delete(integer);
DROP FUNCTION public.user_insert(character varying, character varying, character varying);
DROP FUNCTION public.user_update(integer, character varying, character varying, character varying);
DROP FUNCTION public.user_view(integer);
DROP FUNCTION public.user_view(integer, integer);